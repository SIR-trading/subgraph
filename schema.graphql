type Token @entity(immutable: false) {
  id: Bytes! # Token contract address
  symbol: String
  decimals: Int!
}

type Vault @entity(immutable: false) {
  id: Bytes!
  exists: Boolean!
  collateralToken: Token! @link
  debtToken: Token! @link
  leverageTier: Int!
  totalValue: BigInt!
  totalValueUsd: BigDecimal!
  lockedLiquidity: BigInt!
  teaSupply: BigInt!
  reserveApes: BigInt!
  reserveLPers: BigInt!
  tax: BigInt!
  rate: BigInt!
  ape: Token! @link
  feesIds: [Bytes!]!
}

type Fee @entity(immutable: false) {
  id: Bytes!
  vaultId: Bytes!
  timestamp: BigInt!
  lpApy: BigDecimal!
}

type TeaPosition @entity(immutable: false) {
  id: Bytes!
  vault: Vault! @link
  user: Bytes!
  balance: BigInt!
  collateralTotal: BigInt!
  dollarTotal: BigDecimal!
  debtTokenTotal: BigInt!
}

type ApePosition @entity(immutable: false) {
  id: Bytes!
  vault: Vault! @link
  user: Bytes!
  balance: BigInt!
  collateralTotal: BigInt!
  dollarTotal: BigDecimal!
  debtTokenTotal: BigInt!
}

type ApePositionClosed @entity(immutable: true) {
  id: Bytes!
  vault: Vault! @link
  user: Bytes!
  collateralDeposited: BigInt!
  dollarDeposited: BigDecimal!
  collateralWithdrawn: BigInt!
  dollarWithdrawn: BigDecimal!
  timestamp: BigInt!
}

type Dividend @entity(immutable: true) {
  id: Bytes!
  ethAmount: BigInt!
  sirEthPrice: BigDecimal
  stakedAmount: BigInt!
  timestamp: BigInt!
}

type Auction @entity(immutable: false) {
  id: Bytes!
  token: Token! @link
  amount: BigInt!
  highestBid: BigInt!
  highestBidder: Bytes!
  startTime: BigInt!
  isClaimed: Boolean!
  participants: [AuctionsParticipant!] @derivedFrom(field: "auctionId")
}

type AuctionsParticipant @entity(immutable: false) {
  id: Bytes!
  auctionId: Auction! @link
  user: Bytes!
  bid: BigInt!
}

type AuctionsHistory @entity(immutable: true) {
  id: Bytes!
  token: Token! @link
  amount: BigInt!
  highestBid: BigInt!
  highestBidder: Bytes!
  startTime: BigInt!
}
